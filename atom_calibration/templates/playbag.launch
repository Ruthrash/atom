<?xml version="1.0"?>
<!--

          █████╗ ████████╗ ██████╗ ███╗   ███╗
         ██╔══██╗╚══██╔══╝██╔═══██╗████╗ ████║
         ███████║   ██║   ██║   ██║██╔████╔██║
         ██╔══██║   ██║   ██║   ██║██║╚██╔╝██║
  __     ██║  ██║   ██║   ╚██████╔╝██║ ╚═╝ ██║    _
 / _|    ╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝     ╚═╝   | |
 | |_ _ __ __ _ _ __ ___   _____      _____  _ __| | __
 |  _| '__/ _` | '_ ` _ \ / _ \ \ /\ / / _ \| '__| |/ /
 | | | | | (_| | | | | | |  __/\ V  V / (_) | |  |   <
 |_| |_|  \__,_|_| |_| |_|\___| \_/\_/ \___/|_|  |_|\_\
 https://github.com/lardemua/atom
-->

<!-- WARNING WARNING WARNING WARNING auto-generated file!! -->
<!-- Only modify this file if you know what you are doing! -->

<!--
@file {{c.filename}} Plays back the bag file.
    Sets up image decompressors if needed, reads the urdf robot description.

@arg bag_file  Absolute path to the playing bag.
    default: {{ c.bag_file }}
@arg bag_start Playback starting time (in seconds). default: 0.0
@arg bag_rate  Playback rate. default: 1.0
@arg use_atom_bag_file  Uses the bag file to complement the transformations generated by the urdf/joint_states/robot_state_publisher. Used in cases like softbot. default: False
-->

<launch>

    <arg name="bag_file" default="{{ c.bag_file }}"/>
    <arg name="bag_start" default="0"/>
    <arg name="bag_rate" default="1"/>
    <arg name="optimized" default="false"/>
    <arg name="rviz_file" default="$(find {{ c.package_name }})/rviz/{{ c.rviz_playbag }}"/>
    <arg name="description_file" default="$(find {{ c.package_name }})/urdf/initial_estimate.urdf.xacro"
         unless="$(arg optimized)"/>
    <arg name="description_file" default="$(find {{ c.package_name }})/urdf/optimized.urdf.xacro"
         if="$(arg optimized)"/>

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Throttle topics -->
    {% set remapping = [] -%}
    {% for key, value in c.throttle_topics.items() -%}
    {% if value['use_throttle'] -%}
    <node pkg="topic_tools" type="throttle" name="throttler_{{ value['sensor_key'] }}"
          args="messages {{ key }}_to_throttle {{ value['throttle_hz'] }} {{ key }}"/>
    {% do remapping.append( key ~ ':=' ~ key ~ '_to_throttle' )%}
    {% endif -%}
    {% endfor -%}
    {% set remapping= remapping|join(' ') -%}

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Load robot description and tf generators -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg description_file)"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Playback the bag file -->
    <param name="/use_sim_time" value="true"/>

    {% if c.use_atom_bag_file -%}
    <!-- Play atom bag file adding tfs robot_state_publisher  -->
    <node pkg="rosbag" type="play" name="rosbag_play" output="screen"
              args=" $(arg bag_file) --clock -r $(arg bag_rate) -l -s $(arg bag_start) -d 2 {{ remapping }}"/>
    {% endif -%}

    {% if not c.use_atom_bag_file -%}
    <!-- Play atom bag file adding tfs robot_state_publisher  -->
    <node pkg="rosbag" type="play" name="rosbag_play" output="screen"
              args=" $(arg bag_file) --clock -r $(arg bag_rate) -l -s $(arg bag_start) -d 2 /tf:=/tf_dev_null /tf_static:=/tf_static_dev_null {{ remapping }}"/>
    {% endif -%}

    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

    {% if c.use_compressed_topics -%}
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Image Topic Decompression -->
    {% for key, value in c.compressed_topics.items() -%}
    <node pkg="image_transport" type="republish" name="decompressor_{{ value['sensor_key'] }}" output="screen"
          args="compressed in:={{ key }} raw out:={{ key }}"/>
    {% endfor -%}
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    {% endif -%}


    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
    <!-- Visualization -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_file)" required="true"/>
    <!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->

</launch>
